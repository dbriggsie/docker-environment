version: "3"

services:
  bootstrap:
    hostname: bootstrap
    container_name: bootstrap01
    image: enigmampc/worker_sw:${DOCKER_TAG}
    depends_on:
      - contract
      - km
    environment:
      - ENIGMA_ENV
      - SGX_MODE
      - MIN_CONFIRMATIONS
      - BOOTSTRAP="TRUE"
      - BOOTSTRAP_ID=B1
    expose:
      - "10300" # libp2p port
      - "8080"  # what is this?
    ports:
      - "3346:3346" # gateway port
      - "9229:9229" # nodejs debugger

  worker:
    hostname: worker
    image: enigmampc/worker_sw:${DOCKER_TAG}
    depends_on:
      - contract
      - km
    environment:
      - ENIGMA_ENV
      - SGX_MODE
      - MIN_CONFIRMATIONS
      # FORCE_NEW_ETH_ADDR: "true"
    expose:
      - "9229" # nodejs debugger
      - "3346" # gateway port
      - "10300" # libp2p

  contract:
    hostname: contract
    container_name: contract
    image: enigmampc/contract:${DOCKER_TAG}
    environment:
      - SGX_MODE
      - ENIGMA_ENV
      - AUTO_MINER
      - BLOCK_TIME
      - TIME_BETWEEN_BLOCKS
    ports:
      - "8081:8081" # contract discovery service
      - "9545:9545" # ethereum node port
      - "8001:8001" # faucet port

  km:
    hostname: km
    container_name: km
    image: enigmampc/key_management_sw:${DOCKER_TAG}
    environment:
      - ENIGMA_ENV
      - SGX_MODE
      - MIN_CONFIRMATIONS
    expose:
      - "3040" # JSON RPC port
      - "8081" # KM address discovery

  client:
    hostname: client
    image: enigmampc/client:${DOCKER_TAG}
    stdin_open: true
    tty: true
    depends_on:
      - contract
    environment:
      - ENIGMA_ENV
      - SGX_MODE
#  client:
#    hostname: client
#    image: enigmampc/client:latest
#    stdin_open: true
#    tty: true
#    depends_on:
#      - contract
#    environment:
#      ENIGMA_ENV: K8S
#      SGX_MODE: SW
#      CONTRACT_DISCOVERY_ADDRESS: "52.224.217.218"
#      ETH_NODE_ADDRESS: "52.224.217.218"
#      FAUCET_URL: "http://52.224.217.218:8001"
#      WORKER_URL: "http://13.68.180.103"
